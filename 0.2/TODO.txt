Bard To-Do list

1. [DONE] generators

2. [DONE] unquote & macros

3. returning multiple values; extend let to bind multiple values

4. match (pattern-matching and destructuring)

3. define-macro

4. frame args for define-function

5. series (generators with memoization and support for the List protocol)

6. loop (like named let -- syntax is the same as generate, but without yield)

(loop ((x 0)
       (y 1))
  (then y (+ y 1)))

Use with-exit to escape:

(with-exit (return)
  (loop ((x 0)
         (y 1))
    (if (> y 100)(return y))
    (then y (+ y 1))))

7. fast pure-functional lists

8. fast pure-functional frames

9. User-defined record types

10. User-defined taxonomies with C3 type linearization and method dispatch

11. Thread-safe module variables (likely using Gambit mailboxes)

12. Image saving and loading

13. VM

14. first-class protocols

15. modules

16. lazy list comprehensions (using generators?)

