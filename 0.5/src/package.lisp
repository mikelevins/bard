;;;; ***********************************************************************
;;;; FILE IDENTIFICATION
;;;;
;;;; Name:          package.lisp
;;;; Project:       Bard
;;;; Purpose:       packages used by the bard compiler and VM
;;;; Author:        mikel evins
;;;; Copyright:     2013 mikel evins
;;;;                Portions copyright 1991 by Peter Norvig
;;;;
;;;; ***********************************************************************

(defpackage #:bard
  (:use #:cl)
  (:shadow #:class #:map #:union))

;;; ---------------------------------------------------------------------
;;; bard packages
;;; ---------------------------------------------------------------------

(defpackage #:bard-symbols (:use))

(defpackage #:|bard.language|
            (:export 
             #:|false|
             #:|nothing|
             #:|true|
             #:|undefined|
             #:|*|
             #:|+|
             #:|+PI+|
             #:|-|
             #:|->|
             #:|/|
             #:|/=|
             #:|1+|
             #:|1-|
             #:|<|
             #:|<=|
             #:|=|
             #:|>|
             #:|>=|
             #:|Accessor|
             #:|Actor|
             #:|AdjustableArray|
             #:|AdjustableVector|
             #:|Anything|
             #:|Array|
             #:|Atom|
             #:|Boolean|
             #:|Character|
             #:|Class|
             #:|Collection|
             #:|Complex|
             #:|Condition|
             #:|EndOfFile|
             #:|Error|
             #:|Float|
             #:|Function|
             #:|Gatherer|
             #:|Generator|
             #:|Getter|
             #:|HashTable|
             #:|HomogeneousVector|
             #:|Integer|
             #:|Keyword|
             #:|List|
             #:|Macro|
             #:|Method|
             #:|MutableTable|
             #:|Name|
             #:|Nothing|
             #:|Number|
             #:|Package|
             #:|Pair|
             #:|Pathname|
             #:|Procedure|
             #:|RandomState|
             #:|Ratio|
             #:|Rational|
             #:|ReadTable|
             #:|Real|
             #:|Record|
             #:|ResourceLocator|
             #:|ResourceName|
             #:|Set|
             #:|Setter|
             #:|Singleton|
             #:|Stream|
             #:|Structure|
             #:|Symbol|
             #:|Table|
             #:|Text|
             #:|Tuple|
             #:|Type|
             #:|TypeSynonym|
             #:|Undefined|
             #:|Union|
             #:|Vector|
             #:|Warning|
             #:|Word|

             #:|<actor>|
             #:|<adjustable-array>|
             #:|<adjustable-vector>|
             #:|<alist-table>|
             #:|<array>|
             #:|<bignum>|
             #:|<bitvector>|
             #:|<character>|
             #:|<class>|
             #:|<complexnum>|
             #:|<cons>|
             #:|<double-float>|
             #:|<eof>|
             #:|<false>|
             #:|<fixnum>|
             #:|<function>|
             #:|<getter>|
             #:|<hashtable>|
             #:|<lisp-pathname>|
             #:|<macro>|
             #:|<method>|
             #:|<package>|
             #:|<posix-pathname>|
             #:|<random-access-list>|
             #:|<random-state>|
             #:|<readtable>|
             #:|<record>|
             #:|<restart>|
             #:|<setter>|
             #:|<single-float>|
             #:|<singleton>|
             #:|<string>|
             #:|<synonym>|
             #:|<tree-table>|
             #:|<true>|
             #:|<tuple>|
             #:|<undefined>|
             #:|<union>|
             #:|<url>|
             #:|<vector>|
             #:|<windows-pathname>|
             #:|<word>|
             #:|<wordvector>|

             #:|abort|
             #:|abs|
             #:|accept|
             #:|acons|
             #:|acos|
             #:|acosh|
             #:|add-last|
             #:|add-method!|
             #:|adjoin|
             #:|adjust!|
             #:|adjustable?|
             #:|all|
             #:|all-applicable-methods|
             #:|all-names|
             #:|all-packages|
             #:|all-restarts|
             #:|alphabetic-character?|
             #:|alphanumeric-character?|
             #:|any|
             #:|append|
             #:|apply|
             #:|array-dimension|
             #:|array-dimension-limit|
             #:|array-dimensions|
             #:|array-element-type|
             #:|array-has-fill-pointer?|
             #:|array-rank|
             #:|array-rank-limit|
             #:|array-row-major-index|
             #:|array-total-size|
             #:|array?|
             #:|as|
             #:|as-namestring|
             #:|as-url-string|
             #:|ash|
             #:|asin|
             #:|asinh|
             #:|assert|
             #:|assoc|
             #:|atan|
             #:|atanh|
             #:|atom?|
             #:|begin|
             #:|boole|
             #:|bound?|
             #:|break|
             #:|by|
             #:|capitalize|
             #:|capitalized?|
             #:|catenate|
             #:|ceiling|
             #:|character-name|
             #:|character?|
             #:|character-code|
             #:|characters|
             #:|choose|
             #:|choose-if|
             #:|chunk|
             #:|class|
             #:|class-of|
             #:|class?|
             #:|classes|
             #:|clear-input|
             #:|close|
             #:|coalesce|
             #:|code-character|
             #:|collect|
             #:|collect-alist|
             #:|collect-and|
             #:|collect-append|
             #:|collect-eighth|
             #:|collect-element|
             #:|collect-fifth|
             #:|collect-first|
             #:|collect-fourth|
             #:|collect-image|
             #:|collect-last|
             #:|collect-length|
             #:|collect-max|
             #:|collect-min|
             #:|collect-ninth|
             #:|collect-or|
             #:|collect-plist|
             #:|collect-reduce|
             #:|collect-second|
             #:|collect-seventh|
             #:|collect-sixth|
             #:|collect-stream|
             #:|collect-sum|
             #:|collect-table|
             #:|collect-third|
             #:|collecting|
             #:|complement|
             #:|complex?|
             #:|conjugate|
             #:|connect|
             #:|constantly|
             #:|contains-key?|
             #:|contains-value?|
             #:|continue|
             #:|copy|
             #:|cos|
             #:|cosh|
             #:|cotruncate|
             #:|count|
             #:|count-if|
             #:|cursor|
             #:|dec!|
             #:|define|
             #:|define-package|
             #:|delete!|
             #:|delete-package!|
             #:|denominator|
             #:|device|
             #:|digit-character?|
             #:|directory|
             #:|directory?|
             #:|do-entries|
             #:|do-keys|
             #:|downcase|
             #:|downcase?|
             #:|drop|
             #:|drop-all-keys|
             #:|drop-while|
             #:|eighth|
             #:|element|
             #:|element|
             #:|empty?|
             #:|ensure-directories-exist!|
             #:|equal?|
             #:|equivalent?|
             #:|error|
             #:|even?|
             #:|every?|
             #:|exp|
             #:|expand|
             #:|export|
             #:|expt|
             #:|fifth|
             #:|fill-pointer|
             #:|filter|
             #:|find|
             #:|find-method|
             #:|find-name|
             #:|find-package|
             #:|find-restart|
             #:|finish-output|
             #:|first|
             #:|float|
             #:|float?|
             #:|floor|
             #:|for|
             #:|fourth|
             #:|function?|
             #:|gather|
             #:|gathering|
             #:|gcd|
             #:|generate|
             #:|gensym|
             #:|get|
             #:|graphic-character?|
             #:|hash|
             #:|hashtable-test|
             #:|hashtable?|
             #:|head|
             #:|host|
             #:|identical?|
             #:|identity|
             #:|if|
             #:|ignore-errors|
             #:|ignore-warnings|
             #:|image|
             #:|imaginary-part|
             #:|import|
             #:|in-package|
             #:|inc!|
             #:|indexes|
             #:|initialize|
             #:|input?|
             #:|insert|
             #:|instance-of?|
             #:|integer-length|
             #:|integer?|
             #:|interleave|
             #:|intern|
             #:|interpose|
             #:|is|
             #:|iterate|
             #:|join|
             #:|keys|
             #:|keyword?|
             #:|last|
             #:|latch|
             #:|lcm|
             #:|left|
             #:|length|
             #:|let|
             #:|lines|
             #:|list?|
             #:|listen|
             #:|log|
             #:|logand|
             #:|logandc1|
             #:|logandc2|
             #:|logbit?|
             #:|logcount|
             #:|logeqv|
             #:|logior|
             #:|lognand|
             #:|lognor|
             #:|lognot|
             #:|logorc1|
             #:|logorc2|
             #:|logtest|
             #:|logxor|
             #:|make|
             #:|make-unbound!|
             #:|mapping|
             #:|mask|
             #:|max|
             #:|member?|
             #:|merge|
             #:|merge-pathnames|
             #:|method|
             #:|method?|
             #:|min|
             #:|mingle|
             #:|mod|
             #:|modified|
             #:|mutable?|
             #:|name|
             #:|namecharacter|
             #:|negative?|
             #:|newline|
             #:|next|
             #:|next-method?|
             #:|ninth|
             #:|no-applicable-method|
             #:|not|
             #:|not-any?|
             #:|not-every?|
             #:|number?|
             #:|numerator|
             #:|numeric-character?|
             #:|objects|
             #:|odd?|
             #:|of|
             #:|open|
             #:|open?|
             #:|or|
             #:|output?|
             #:|package-exports|
             #:|package-imports|
             #:|package-name|
             #:|package-of|
             #:|package-used-by|
             #:|package-uses|
             #:|package?|
             #:|pair|
             #:|pair?|
             #:|partition|
             #:|pathname|
             #:|pathname?|
             #:|penult|
             #:|phase|
             #:|pop|
             #:|pop!|
             #:|port|
             #:|position|
             #:|position-if|
             #:|positions|
             #:|positive?|
             #:|prefix-match?|
             #:|previous|
             #:|probe|
             #:|push|
             #:|push!|
             #:|pushnew|
             #:|pushnew!|
             #:|put|
             #:|put!|
             #:|quasiquote|
             #:|query|
             #:|quote|
             #:|random|
             #:|random-state?|
             #:|range|
             #:|range-from|
             #:|rational|
             #:|rational?|
             #:|read|
             #:|read|
             #:|read-line|
             #:|readtable?|
             #:|real-part|
             #:|real?|
             #:|receive|
             #:|reduce|
             #:|rehash-threshold|
             #:|rem|
             #:|remove|
             #:|remove!|
             #:|remove-method!|
             #:|rename!|
             #:|rename-package!|
             #:|repeat|
             #:|resource-name?|
             #:|rest|
             #:|result|
             #:|resume|
             #:|reverse|
             #:|right|
             #:|round|
             #:|row-major-ref|
             #:|scan|
             #:|scan-alist|
             #:|scan-image|
             #:|scan-list|
             #:|scan-map|
             #:|scan-multiple|
             #:|scan-names|
             #:|scan-plist|
             #:|scan-range|
             #:|scan-stream|
             #:|scan-table|
             #:|scan-tails|
             #:|scheme|
             #:|second|
             #:|select|
             #:|send|
             #:|set!|
             #:|setter|
             #:|seventh|
             #:|shuffle|
             #:|sin|
             #:|sinh|
             #:|sixth|
             #:|slot-bound?|
             #:|slot-exists?|
             #:|some?|
             #:|sort|
             #:|split|
             #:|sqrt|
             #:|standard-character?|
             #:|standard-error|
             #:|standard-input|
             #:|standard-output|
             #:|stream?|
             #:|subclass|
             #:|sublist|
             #:|subseries|
             #:|subtype?|
             #:|suffix-match?|
             #:|symbol?|
             #:|table?|
             #:|tail|
             #:|tails|
             #:|take|
             #:|take-by|
             #:|take-while|
             #:|tan|
             #:|tanh|
             #:|tenth|
             #:|text?|
             #:|third|
             #:|tree-table?|
             #:|trim|
             #:|true-name|
             #:|truncate|
             #:|type|
             #:|unexport|
             #:|unintern|
             #:|unique|
             #:|unread|
             #:|until|
             #:|until-if|
             #:|unuse-package|
             #:|unzip|
             #:|upcase|
             #:|upcase?|
             #:|url?|
             #:|use-package|
             #:|vals|
             #:|vector|
             #:|vector-pop!|
             #:|vector-push!|
             #:|vector?|
             #:|version|
             #:|warn|
             #:|whitespace-character?|
             #:|with-exit|
             #:|with-open|
             #:|write|
             #:|yield|
             #:|zero?|
             #:|zip|))

(defpackage #:|bard.user| (:use #:|bard.language|))

(in-package :bard)

(defparameter *bard-packages*
  (list
   (find-package "bard.language")
   (find-package "bard.user")))

(defun bard-package? (p)
  (member p *bard-packages*))



