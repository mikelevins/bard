
src/apply.scm,49
(define (%apply 12,356
(define %funcall 20,693

src/bard.scm,57
(define *bard-prompt* 14,516
(define (bard:repl 16,549

src/env.scm,511
(define (%global-variables)16,537
(define $bard-global-variables 19,592
(define (%defglobal 21,628
(define (%remglobal 25,711
(define (%global-value 29,786
(define (%null-environment)36,1041
(define (%add-binding 38,1075
(define (%add-let-bindings 41,1140
(define (%extend-environment 51,1516
(define (%merge-environments 60,1839
(define (%copy-environment 63,1902
(define (%lookup-variable-value 71,2113
(define (%set-variable! 75,2232
(define (%globally-bound? 92,2802
(define (%bound? 99,2990

src/error.scm,86
(define (error->string 12,355
(define (display-error 86,5489
(define (warn 90,5641

src/eval.scm,238
(define (%eval-variable 12,350
(define (%eval-sequence 23,737
(define (%eval-function-application 31,922
(define (%eval-application 37,1109
(define (%eval 44,1314
(define (%bard-load 58,1848
(define (%bard-load-from-string 72,2242

src/init.scm,28
(define (%init-bard)12,376

src/macro.scm,172
(define $bard-macro-functions 15,435
(define (%define-macro-function 17,490
(define (%macro-form? 20,582
(define (%macroexpand 26,724
(define (%eval-macro-form 32,928

src/primitives.scm,2929
(define prim:apply17,625
(define prim:complement 24,772
(define (%compose-functions 36,1104
(define prim:compose49,1474
(define prim:constantly 56,1617
(define prim:eval70,1927
(define prim:flip 78,2126
(define prim:identity90,2504
(define prim:partial 97,2637
(define prim:*113,3185
(define prim:+120,3294
(define prim:-127,3403
(define prim:/134,3512
(define prim:even?141,3621
(define prim:odd?148,3739
(define prim:random155,3854
(define prim:remainder166,4117
(define prim:=177,4420
(define prim:next188,4703
(define (bard:cycle 195,4835
(define prim:cycle204,5116
(define (bard:iterate 211,5239
(define prim:iterate217,5391
(define (bard:range-from 224,5520
(define prim:range-from227,5619
(define prim:list238,5928
(define (%bard-map 249,6217
(define prim:map258,6500
(define (%make-partition-function 269,6820
(define (%bard-partition 284,7357
(define prim:partition291,7538
(define (bard:range 302,7836
(define prim:range314,8183
(define (%bard-alist-table-contains-key? 325,8477
(define prim:alist-table-contains-key?335,8761
(define (%bard-alist-table-contains-value? 342,8950
(define prim:alist-table-contains-value?352,9237
(define prim:alist-table-get359,9432
(define prim:alist-table-keys366,9585
(define (%table->list 373,9741
(define (%merge-alist-tables 375,9789
(define prim:alist-table-merge380,9948
(define prim:alist-table-put387,10109
(define prim:alist-table-vals394,10262
(define prim:table401,10418
(define prim:<412,10759
(define prim:<=419,10868
(define prim:>426,10980
(define prim:>=433,11089
(define prim:pair444,11372
(define prim:current-input455,11658
(define prim:load462,11805
(define prim:read469,11948
(define (%bard-read-file 476,12123
(define prim:read-file485,12379
(define prim:read-line492,12515
(define (%bard-read-lines 499,12645
(define prim:read-lines506,12941
(define prim:read-text513,13080
(define prim:error525,13415
(define prim:exit536,13736
(define prim:gc543,13851
(define prim:gensym550,13962
(define prim:quit557,14096
(define prim:room564,14211
(define prim:uuid575,14458
(define prim:version582,14592
(define (%applicable? 593,14911
(define prim:applicable?599,15078
(define prim:boolean?606,15215
(define prim:char?613,15343
(define (%false? 620,15461
(define prim:false?624,15518
(define prim:float?631,15641
(define prim:foreign-value?638,15763
(define prim:function?645,15904
(define prim:input-stream?652,16034
(define prim:integer?659,16179
(define prim:interpreted-method?666,16306
(define prim:iostream?673,16466
(define prim:list?680,16635
(define prim:output-stream?687,16753
(define singleton694,16896
(define (%true? 701,17022
(define prim:true?705,17101
(define prim:current-output716,17392
(define prim:display723,17542
(define prim:newline730,17666
(define prim:print737,17803
(define prim:show745,18009
(define (%bard-write 752,18149
(define prim:write764,18649

src/print.scm,1536
(define +printer-functions+ 16,528
(define (define-printer-function 18,582
(define (get-printer-function 21,667
(define (alist-slots->string 28,913
(define (%record->string 51,1789
(define (%tuple->string 56,1985
(define (%schema->string 75,2600
(define (%as-string 82,2824
(define (%show 92,3165
(define (%print 94,3199
(define-printer-function (%tag 102,3469
(define-printer-function (schema-tag 103,3525
(define-printer-function (schema-tag 104,3601
(define-printer-function (schema-tag 105,3670
(define-printer-function (schema-tag 106,3753
(define-printer-function (schema-tag 107,3819
(define-printer-function (schema-tag 108,3882
(define-printer-function (schema-tag 109,3945
(define-printer-function (schema-tag 110,4008
(define-printer-function (schema-tag 111,4071
(define-printer-function (schema-tag 112,4134
(define-printer-function (schema-tag 113,4197
(define-printer-function (schema-tag 114,4261
(define-printer-function (schema-tag 117,4426
(define-printer-function (schema-tag 121,4562
(define (function->string 142,5237
(define-printer-function (schema-tag 151,5610
(define-printer-function (schema-tag 154,5699
(define-printer-function (schema-tag 183,6775
(define-printer-function (schema-tag 190,7065
(define-printer-function (schema-tag 193,7214
(define-printer-function (schema-tag 196,7317
(define-printer-function (schema-tag 214,8042
(define-printer-function (schema-tag 220,8223
(define-printer-function (schema-tag 223,8324
(define-printer-function (schema-tag 230,8680

src/protocol-addressing.scm,179
(define bard:url17,564
(define bard:url-domain35,1382
(define bard:url-path47,1776
(define bard:url-port59,2160
(define bard:url-query71,2545
(define bard:url-scheme83,2936

src/protocol-comparing.scm,45
(define bard:=14,414
(define (%bard=17,542

src/protocol-converting.scm,50
(define (%->list 18,607
(define bard:as 29,1021

src/protocol-creating.scm,142
(define bard:make 18,607
(define (%bard-make-anything 23,763
(define (%bard-make-alist-table 32,1036
(define (%bard-make-function 42,1335

src/protocol-listing.scm,1073
(define (%List? 18,588
(define bard:add-first 32,996
(define bard:add-last 59,2103
(define bard:any 90,3408
(define bard:append 120,4618
(define bard:by 157,6024
(define bard:drop 185,7086
(define bard:element 224,8766
(define (%bard-list-element 232,9135
(define (%empty? 275,10824
(define bard:empty? 282,10995
(define bard:filter 309,12007
(define (%bard-filter-list 312,12159
(define (%bard-filter-string 352,13380
(define (%bard-filter-alist-table 374,14099
(define bard:first 398,14986
(define bard:last 430,16205
(define (%pair-last 433,16344
(define bard:length 460,17223
(define bard:next-last 487,18202
(define bard:reduce 510,19057
(define (%bard-reduce 513,19222
(define bard:rest 593,22155
(define bard:second 620,23156
(define bard:some? 642,23986
(define (%bard-some? 645,24139
(define (%bard-string-some? 679,25040
(define (%bard-alist-table-some? 700,25688
(define bard:take 723,26515
(define (%bard-list-take 736,27052
(define (%bard-generator-take 761,27954
(define bard:take-by 778,28518
(define bard:take-one 804,29726

src/protocol-mapping.scm,25
(define (%Table? 16,566

src/protocol-ordering.scm,95
(define bard:< 14,420
(define bard:> 39,1834
(define bard:<=64,3248
(define bard:>=89,4716

src/protocol-pairing.scm,53
(define bard:left 14,415
(define bard:right 22,698

src/protocol-streaming.scm,182
(define bard:contents15,449
(define bard:lines21,652
(define bard:put25,782
(define bard:stream-direction29,921
(define bard:stream-mode33,1075
(define bard:stream-type37,1214

src/protocol-system.scm,25
(define bard:file13,365

src/protocol-text-processing.scm,134
(define (%bard-join-text 17,537
(define bard:join-text 24,745
(define (%bard-split-string 36,1234
(define bard:split-text 56,2054

src/protocol-typing.scm,206
(define bard:list? 16,429
(define bard:symbol? 44,1383
(define bard:nothing? 57,1862
(define bard:something? 70,2346
(define bard:table? 83,2844
(define bard:text? 96,3321
(define bard:type 119,4111

src/read.scm,243
(define-type readtable19,602
(define (bard:make-readtable)70,3250
(define +bard-readtable+ 77,3479
(define (%read-cons 83,3694
(define (%read-value->bard-value 95,4103
(define (bard:read 105,4333
(define (bard:read-from-string 113,4712

src/singleton-tree.scm,268
(define-type %singleton-tree12,394
(define (%singleton-tree)16,504
(define (%singleton-tree-ref 19,580
(define (%singleton-tree-get 24,717
(define (%singleton-tree-remove! 37,1138
(define (%singleton-tree-put! 50,1597
(define (%singleton-tree-enumerate 67,2418

src/sort.scm,22
(define (sort 15,428

src/special.scm,1343
(define $special-forms-table 12,358
(define (%defspecial 14,412
(define (%special-evaluator 17,494
(define (%special-form? 20,569
(define (%eval-special-form 24,666
(define (%eval-def 83,3056
(define (%eval-define-variable 93,3312
(define (%eval-define-macro 99,3449
(define (%parse-method-prototype 111,3828
(define (%parse-type-constraints 153,5700
(define (%eval-define-method 172,6527
(define (%eval-define-class 218,8919
(define (%make-named-protocol-function 254,10313
(define (%maybe-make-named-protocol-function 257,10413
(define (%build-protocol-functions-alist 273,11176
(define (%maybe-add-protocol-function! 280,11494
(define (%eval-define-protocol 301,12432
(define (%eval-define-record 317,13055
(define (%eval-define-tuple 326,13288
(define (%loop-name 423,17206
(define (%loop-bindings 424,17250
(define (%loop-vars 425,17298
(define (%loop-vals 426,17347
(define (%loop-body 427,17397
(define (%parse-method-parameters 457,18849
(define (%parse-method-form 471,19384
(define (%mdesc-get-name 480,19762
(define (%mdesc-get-formals 481,19813
(define (%mdesc-get-restarg 482,19867
(define (%mdesc-get-body 483,19921
(define %eval-method-form485,19973
(define (%eval-make-protocol 513,20902
(define (constant? 528,21433
(define (combine-skeletons 533,21533
(define (%expand-quasiquote 545,21971

src/type-signature-macros.scm,33
(define-macro (signature 12,354

src/type-signatures.scm,139
(define-type signature12,386
(define (signature-equal? 18,480
(define (signature-congruent? 30,1006
(define (signature->string 38,1310

src/types-alist-table.scm,317
(define tags:$bard-alist-table 19,704
(define <alist-table> 20,761
(define (%make-alist-table 25,860
(define alist-table-slots 32,1059
(define set-alist-table-slots! 33,1113
(define (alist-table-get 35,1178
(define (alist-table-keys 42,1349
(define (alist-table-put 53,1700
(define (alist-table-vals 58,1908

src/types-classes.scm,916
(define tags:$bard-class 20,692
(define <class> 21,743
(define (%make-class 26,824
(define & 32,1028
(define Anything 33,1090
(define Applicable 34,1132
(define Boolean 35,1178
(define Character 36,1218
(define Class 37,1262
(define File 38,1298
(define Float 39,1332
(define Fraction 40,1368
(define Function 41,1410
(define InputStream 42,1452
(define Integer 43,1500
(define IODirection 44,1540
(define IOMode 45,1588
(define IOType 46,1626
(define Keyword 47,1664
(define List 48,1704
(define Method 49,1738
(define Name 50,1776
(define Null 51,1810
(define Number 52,1844
(define Orderable 53,1882
(define OutputStream 54,1926
(define Pair 55,1976
(define Protocol 56,2010
(define Ratio 57,2052
(define Schema 58,2088
(define Stream 59,2126
(define Symbol 60,2164
(define Table 61,2202
(define Text 62,2238
(define Type 63,2272
(define Undefined 64,2306
(define URL 65,2350

src/types-function.scm,715
(define tags:$bard-function 19,695
(define <function> 20,749
(define (%add-method! 24,838
(define (%remove-method! 31,1077
(define (%add-primitive-method! 40,1303
(define (%search-method-tree-for-value 49,1715
(define (%search-method-tree-for-values 58,2058
(define (%function-best-method 72,2516
(define (make-function 83,2928
(define function? 100,3729
(define function-name 101,3767
(define function-proc 102,3813
(define set-function-proc! 103,3859
(define function-thunk-method 104,3915
(define set-function-thunk-method! 105,3977
(define function-method-tree 106,4049
(define function-signatures 107,4109
(define set-function-signatures! 108,4167
(define (function-add-signatures! 110,4236

src/types-generator.scm,262
(define tags:$bard-generator 19,698
(define <generator> 20,753
(define generator-proc 24,843
(define set-generator-proc! 25,891
(define generator-results 26,949
(define set-generator-results! 27,1003
(define (make-generator 31,1085
(define (next 74,2738

src/types-interpreted-method.scm,727
(define tags:$bard-interpreted-method 19,725
(define <interpreted-method> 20,789
(define (%merge-symbol-restarg 24,908
(define (%merge-table-restarg 27,987
(define (%merge-restarg 42,1600
(define (%method-lexical-environment 47,1750
(define (make-interpreted-method 65,2389
(define interpreted-method? 86,3558
(define interpreted-method-name 87,3616
(define interpreted-method-proc 88,3682
(define set-interpreted-method-proc! 89,3748
(define interpreted-method-formals 90,3824
(define interpreted-method-restarg 91,3896
(define interpreted-method-required-count 92,3968
(define interpreted-method-environment 93,4054
(define set-interpreted-method-environment! 94,4134
(define interpreted-method-body 95,4224

src/types-primitive-types.scm,888
(define tags:$primitive-schema 24,1035
(define tags:$structure-schema 25,1092
(define tags:$base-schema 26,1149
(define tags:$record-schema 27,1201
(define tags:$tuple-schema 28,1255
(define tags:$union-schema 29,1308
(define tags:$foreign-schema 30,1361
(define <primitive-schema> 32,1417
(define <structure-schema> 34,1584
(define <base-schema> 36,1751
(define <record> 38,1893
(define <tuple> 40,2024
(define <union> 42,2150
(define <foreign-schema> 44,2276
(define <undefined> 55,2777
(define <null> 57,2909
(define <character> 59,3016
(define <boolean> 61,3148
(define <symbol> 63,3270
(define <keyword> 65,3387
(define <flonum> 67,3509
(define <ratnum> 69,3626
(define <fixnum> 71,3743
(define <bignum> 73,3860
(define <primitive-procedure> 75,3977
(define <string> 77,4139
(define <pair> 79,4256
(define (%undefined? 82,4364
(define (%defined? 83,4407

src/types-primitive.scm,275
(define tags:$bard-primitive 19,698
(define <primitive> 20,753
(define (make-primitive 24,845
(define primitive-name 36,1274
(define primitive-proc 37,1322
(define set-primitive-proc! 38,1370
(define primitive-restarg 39,1428
(define primitive-required-count 40,1482

src/types-protocols.scm,621
(define tags:$bard-protocol 19,693
(define <protocol> 20,747
(define (%make-protocol 24,836
(define (%protocol-ref 28,946
(define (%protocol-add! 31,1039
(define (%protocol-remove! 35,1141
(define Addressing 43,1400
(define Applying 44,1478
(define Calculating 45,1567
(define Comparing 46,1676
(define Constructing 47,1765
(define Converting 48,1844
(define Listing 49,1959
(define Mapping 50,2044
(define Ordering 51,2130
(define Pairing 52,2219
(define Reading 53,2304
(define Streaming 54,2397
(define System 55,2479
(define TextProcessing 56,2551
(define Typing 57,2626
(define Writing 58,2715

src/types-records.scm,358
(define tags:$bard-record 16,539
(define tags:$bard-record-instance 17,591
(define (%parse-record-slot-spec 19,653
(define (%parse-record-slot-specs 26,928
(define (make-record 34,1229
(define (initialize-record 41,1443
(define (%make-record-slot 63,2300
(define (instantiate-record 69,2476
(define (record-ref 78,2814
(define (record-set! 81,2964

src/types-singleton.scm,260
(define tags:$bard-singleton 19,698
(define <singleton> 20,753
(define +singletons+ 24,852
(define (%existing-singleton 26,901
(define (%register-singleton! 29,971
(define (%singleton 34,1067
(define singleton-value 42,1258
(define %singleton? 43,1308

src/types-structure-schemas.scm,27
(define <iostream> 16,571

src/types-tuples.scm,230
(define tags:$bard-tuple 16,541
(define tags:$bard-tuple-instance 17,592
(define (make-tuple 19,653
(define (initialize-tuple 27,937
(define (instantiate-tuple 47,1685
(define (tuple-ref 57,2071
(define (tuple-set! 60,2173

src/types-url.scm,275
(define tags:$bard-url 19,680
(define <url> 20,729
(define (%make-url 25,804
(define url-username 30,1009
(define url-password 31,1053
(define url-domain 32,1097
(define url-path 33,1137
(define url-port 34,1173
(define url-query 35,1209
(define url-scheme 36,1247

src/types.scm,2582
(define (%find-bignum)21,766
(define-type schema 31,1043
(define-type schema-instance 32,1097
(define-schema primitive-schema)34,1179
(define-schema structure-schema 35,1212
(define-schema base-schema)36,1255
(define-schema record-schema 37,1283
(define-instance record-instance 38,1319
(define-schema tuple-schema 39,1359
(define-instance tuple-instance 40,1409
(define-schema union-schema)41,1448
(define-instance union-instance 42,1477
(define-schema foreign-schema 44,1520
(define-instance alist-table-instance 48,1609
(define-instance class-instance 49,1693
(define-instance function-instance51,1778
(define-instance generator-instance 55,1901
(define-instance interpreted-method-instance59,1994
(define-instance primitive-instance63,2149
(define-instance protocol-instance 67,2261
(define-instance singleton-instance 72,2356
(define-instance url-instance 74,2437
(define tags:$gambit-fixnum 82,2723
(define tags:$gambit-subtyped 83,2754
(define tags:$gambit-special 84,2787
(define tags:$gambit-pair 85,2819
(define tags:$gambit-subtype-structure 87,2901
(define (%gambit-type 89,2944
(define (%gambit-special? 90,2990
(define (%gambit-subtype 92,3047
(define $max-bard-special-number 105,3568
(define $unercognized-bard-special-number 106,3606
(define (%bard-special-number 108,3675
(define $type-mask 127,4326
(define $subtype-mask 128,4384
(define (integer->subtype 130,4443
(define (subtype->integer 131,4495
(define (tag->gambit-type 133,4549
(define (tag->gambit-subtype 134,4605
(define $next-bard-type-number 144,5092
(define (%next-bard-type-number)145,5155
(define $bard-type-mask 150,5300
(define (integer->bard-type 152,5359
(define (bard-type->integer 153,5414
(define (%make-tag 155,5471
(define (tag->bard-type 160,5624
(define (%tag 162,5705
(define tags:$undefined 179,6376
(define tags:$null 180,6418
(define tags:$boolean 181,6449
(define tags:$character 182,6482
(define tags:$fixnum 183,6518
(define tags:$bignum 184,6549
(define tags:$flonum 185,6593
(define tags:$ratnum 186,6626
(define tags:$string 187,6659
(define tags:$pair 188,6694
(define tags:$symbol 189,6730
(define tags:$keyword 190,6764
(define tags:$procedure 191,6799
(define tags:$vector 192,6846
(define tags:$box 193,6884
(define +tag->schema-registry+ 204,7303
(define (%register-primitive-schema! 210,7510
(define (%tag->schema 213,7602
(define +structure->schema-registry+ 222,7919
(define (%register-structure-schema! 224,7982
(define (%structure->schema 227,8110
(define +foreign-name->schema-registry+ 233,8337

src/utils.scm,1434
(define (read-file 16,525
(define (assert 25,849
(define (bound? 28,904
(define (not-yet-implemented 31,993
(define (slib:error 34,1069
(define (complement 41,1343
(define (constantly 45,1440
(define (current-continuation)47,1481
(define (identity 50,1548
(define (flip 52,1573
(define (iota 54,1615
(define (partial 62,1782
(define (any 70,2034
(define (by 73,2098
(define (copy-tree 105,3229
(define (drop 117,3521
(define (every? 120,3562
(define (filter 128,3723
(define (interpose 136,3903
(define (make-list 144,4082
(define (next-last 152,4286
(define (position 161,4532
(define (remove-if 174,4911
(define (remv 183,5153
(define (some? 192,5385
(define (take 200,5554
(define (take-by 211,5807
(define (zip 241,6935
(define (alist-get 247,7138
(define (alist-ref 255,7367
(define (alist-set! 262,7610
(define (alist-keys 268,7803
(define (alist-vals 269,7846
(define (merge-alists 271,7890
(define (plist->alist 296,8885
(define (getf 311,9403
(define (comment-line? 325,9887
(define (empty-string? 337,10205
(define (left-trim 340,10263
(define (nonempty-source-line? 350,10525
(define (right-trim 356,10670
(define (string-char-position 365,10909
(define (string-split-on 374,11133
(define (str 386,11587
(define (string-join 398,11949
(define (string-next-last 401,12039
(define (trim-whitespace 405,12118
(define (vector-every? 412,12381
(define (vector-position 421,12593

src/value-to-schema.scm,32
(define (%value->schema 16,584

src/version.scm,37
(define $bard-version-string 13,376

src/main.scm,0
