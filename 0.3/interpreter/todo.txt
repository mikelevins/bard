TO DO

=== release v0.3.x ===

=============
Old Post 0.3:
=============

- implement (is? val type) where type is a Class; should answer a list
  of protocols in which val's concrete type matches type

- special forms to implement
  - match
  - receive
  - send
  - spawn or (make <actor>)

- classes to implement
  - Actor

- protocols to implement
  - Communicating (Actor)

- type system features
  - infer class membership from defined methods

=== release v0.4.x ===

- system work
  - process control
  - network primitives

=== release v0.5.x ===

- system work
  - serialization/deserialization
  - image save/load
  - OS/runtime/windowing/events work

=== release v0.6.x ===

- customizable reader in Bard

=============
New Post 0.3:
=============

- implement the VM and compiler

- further simplify the surface language. The goal is a one-to-one
  correspondence between the main VM instructions and the core
  built-in operations.

- further simplify the data model. take "everything is an object" all
  the way.

- further simplify function dispatch. consider whether Anything is
  really needed.

- build in actor-style communications at the very bottom.

- build in universal serialization at the very bottom, along with
  literal syntax for *all* first-class values.


